/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
  &kp ESC  &kp Q  &kp W             &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P         &kp BSPC
  &kp TAB  &kp A  &kp S             &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI          &kp SQT
&kp LSHFT  &kp Z  &kp X             &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LEFT_CONTROL  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
  &trans    &trans    &kp UP     &trans     &trans     &trans     &kp N7     &kp N8    &kp N9   &kp N0  &kp HOME   &kp F1
  &trans  &kp LEFT  &kp DOWN  &kp RIGHT     &trans     &trans     &kp N4     &kp N5    &kp N6   &trans    &trans  &kp F10
&kp LALT    &trans    &trans     &trans  &kp MINUS   &kp PLUS     &kp N1     &kp N2    &kp N3  &kp DOT    &trans  &kp F20
                               &kp LGUI     &trans  &kp SPACE    &kp RET  &kp RCTRL  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
  &kp TAB      &kp EXCL      &kp AT    &kp HASH  &kp DLLR  &kp PRCNT         &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&kp LCTRL    &bt BT_CLR  &bt BT_PRV  &bt BT_NXT    &trans      &to 3    &kp UNDERSCORE  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &out OUT_TOG      &trans      &trans    &trans     &trans         &kp MINUS   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                       &kp LGUI  &kp LALT  &kp SPACE           &kp RET     &trans         &kp RALT
            >;
        };

        game_layer {
            bindings = <
&trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans   &sl 4    &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans  &trans  &trans  &trans   &to 0
                        &trans  &kp LALT  &trans    &trans  &kp RWIN  &trans
            >;

            label = "Game";
        };

        game+_layer {
            bindings = <
 &kp F5  &kp N1        &kp N2  &kp N3  &kp N4  &kp N5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
  &to 3   &kp L         &kp O   &kp Y   &kp K   &kp G           &trans         &trans         &trans         &trans         &trans       &kp LA(F4)
&kp F10   &none  &kp NUMBER_0   &none  &kp N6  &kp N7           &trans         &trans         &trans         &trans         &trans            &to 0
                                &kp J   &kp I   &kp M           &trans         &trans         &trans
            >;

            label = "Game++";
        };
    };
};
